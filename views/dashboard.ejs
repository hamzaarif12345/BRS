<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BrewVerse</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
      crossorigin="anonymous"
    ></script>
  </head>
  <body>
    <style>


.header {
        border-end-end-radius: 25px;
        border-end-start-radius: 25px;
        overflow: hidden;
        background-color: lightcyan;
        padding: 20px 10px;
      }

      .cardHover :hover{
        cursor: pointer;
      }

      

      /* Style the header links */
      .header a {
        float: left;
        color: black;
        text-align: center;
        padding: 12px;
        text-decoration: none;
        font-size: 18px;
        line-height: 25px;
        border-radius: 4px;
      }

      /* Style the logo link (notice that we set the same value of line-height and font-size to prevent the header to increase when the font gets bigger */
      .header a.logo {
        font-size: 25px;
        font-weight: bold;
      }

      /* Change the background color on mouse-over */
      .header a:hover {
        border: 1px solid black;
        border-radius: 5px;
        background-color: #ddd;
        color: black;
      }

      /* Style the active/current link*/
      .header a.active {
        background-color: lightseagreen;
        color: white;
      }

      #cardHolder{
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
      }

      /* Float the link section to the right */
      .header-right {
        float: right;
      }

      .dropdown {
    position: absolute;
    top: 50px; /* Adjust the vertical position as needed */
    right: 0;
    display: block;
    }

      /* Add media queries for responsiveness - when the screen is 500px wide or less, stack the links on top of each other */
      @media screen and (max-width: 500px) {
        .header a {
          float: none;
          display: block;
          text-align: left;
        }
        .header-right {
          float: none;
        }
      }

      @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap");

  body {
    background: lightskyblue;
  }

  .rating-box {
    width: fit-content;
    position: relative;
    background: #f8c78f;
    padding: 25px 50px 35px;
    border-radius: 25px;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.05);
  }
  .rating-box header {
    font-size: 22px;
    color: #000000;
    font-weight: 500;
    margin-bottom: 20px;
    text-align: center;
  }
  .rating-box .stars {
    display: flex;
    align-items: center;
    gap: 25px;
  }
  .stars i {
    color: #e6e6e6;
    font-size: 35px;
    cursor: pointer;
    transition: color 0.2s ease;
  }
  .stars i.active {
    color: #ff9c1a;
  }

  .brewDetailsHolder{
    justify-content: center;
    align-items: center;
    display: flex;
    flex-direction: column;
  }
    </style>
        <div class="header" style="display: flex; align-items: center; justify-content: space-between;">
            <img  src="beer.png" width="50px" class="logo" onclick="location.href='/'"></img>
            <div style="display: flex; ">
              <select id="searchBy" class="searchBy" name="searchBy">
                <option value="by_city">City</option>
                <option value="by_place">Place Name</option>
                <option value="by_type">Type</option>
              </select>
              <input style="width: 400px;" placeholder="Search by city, place or type..." class="form-control mx-2" id="searchBarText" type="text" minlength="2">
              <button style="border-radius: 10px; padding: 10px; " onclick="searchBarText()">Search</button>
            </div>
            <div class="header-right" style="display: flex;">
                <p style="font-size: 30px;padding-right: 10px; margin-top: 10px;">Welcome, <%= locals.username %></p>
                <button type="button" class="btn" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                  <img src="account.svg" style="margin-top: 0;" width="50px" class="logo" ></img>
                  <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <li><a class="dropdown-item" style="color: red;border:1px solid red;" onclick="logout()" >LOGOUT</a></li>
                  </ul>
                </button>
            </div>
        </div>
        <h3 id="introTag" style="text-align: center;padding-top: 300px;font-style: italic;">Start searching... .</h3>

        <div style="display: flex; align-items: center; justify-content: center; height: 100vh">
          <div id="cardHolder" class="m-3 container">
        </div>
        </div>
        <div class="toast-container position-fixed bottom-0 end-0 p-3">
            <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
              <div class="toast-body">Copied to clipboard</div>
            </div>
          </div>
        <script>
      const toastLiveExample = document.getElementById("liveToast");
      function copyToClip() {
        const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample);
        toastBootstrap.show();
      }

      function searchBarText(){ //changes ka reference
        let searchBarText = document.getElementById('searchBarText');
        let introTag = document.getElementById('introTag');
        let cardHolder = document.getElementById('cardHolder');
        let searchBy = document.getElementById('searchBy');
        var searchTerm = searchBarText.value;
        searchTerm = searchTerm.split(" ").join('_');
        introTag.style.display = "none";
        console.log("SEARCH...", searchTerm)
        try {
          fetch("http://localhost:3000/brewSearch", {
            method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'
                },
                body: new URLSearchParams({
                    'searchTerm': searchBarText.value,
                    'searchBy': searchBy.value
                })
          }).then((res)=>{
              return res.json();
          }).then((data)=>{
              cardHolder.innerHTML = ''; // reseting cardholder
            data.forEach(brew => {
              cardHolder.innerHTML += `
            <div class="card my-2 cardHover" style="width: 25rem;" onclick="openBrewPage('${brew["id"]}')">
            <div class="card-body">
              <div style="display: flex;justify-content: space-between;" class="card-title"><strong>${brew['name']}</strong> ${brew['rating']}‚≠ê</div>
              <hr>
              <div class="card-text" style="display:flex; flex-direction: column;">
                <div><strong>Address:</strong> ${brew["address_1"]== null? 'Not Available' : brew["address_1"]}</div>
                <div><strong>Phone:</strong> ${brew["phone"] == null? 'Not Available' : brew["phone"]}</div>
                <div><strong>Website:</strong> ${brew["website_url"] == null? 'Not Available' : brew["website_url"]}</div>
<!-- ADDRESS, Phone number, Web site URL,   State, City, rating-->
              </div>
            </div>
          </div>
            `;
            });

          })
        } catch (error) {
          console.log("error: ", error)
        }
      }

      function openBrewPage(brewID){
        if(brewID){
          window.location.href =  `http://localhost:3000/${brewID}`;
        }
      }

      function logout(){
        try{
          fetch("http://localhost:3000/logout").then(()=>{
            location.reload();
          });
        }catch(e){
          console.log(e);
        }
      }

        </script>
  </body>
</html>
